/*
 * TreeContour.h
 *
 *  Created on: Aug 16, 2009
 *      Ported by: Zaixian Xie
 */

/*
 * Class TreeContour includes several array to
 * represent the tree contour, which is generated by
 * class HierNavHelper.  Class HierNav will use the data
 * in this class to draw a cluster tree.
 */
#ifndef TREECONTOUR_H_
#define TREECONTOUR_H_

#include <vector>

class ClusterTree;
class Cluster;
class HierDisplayInformation;

class TreeContour {
public:
	TreeContour();
	virtual ~TreeContour();

	// These static data is used to draw cluster tree
	// They are generated by class HierNavHelper
	int max_display_height;
	std::vector<double> contour_radius;
	std::vector< std::vector<double> > tree_contour;
	std::vector< std::vector<double> > tree_color;

private:
	// the cluster tree processed by this helper class
	ClusterTree *m_btree;

public:
	// The main objective of this function is to find the tree contour
	void cfNavInit(ClusterTree* btree, HierDisplayInformation* hier_info);

public:
	// Set the cluster treee processed by this helper class
	void setClusterTree(ClusterTree* btree);

	/*
	*	Returns the radius of the root node.
	*/
	double FindRootRadius();


	///
	/// A function that finds the number of levels in the cluster tree
	///
	int FindTreeHeight();

	///
	/// A function that evaluates the level values and populates the array
	/// contour radius
	///
	/// @param countour_radius
	///
	void FindRadiusDistribution(std::vector<double> &contour_radius);

	///
	/// A function that popultates the TreeContour array.
	/// That is evaluates the complete contour and popultate the arryy
	/// tree_countour
	///
	/// @param tree_contour
	/// @param tree_colour
	///
	void FindTreeContour(std::vector< std::vector<double> > &tree_contour,
						 std::vector< std::vector<double> > &tree_colour,
						 std::vector<double> contour_radius);

private:

	///
	/// A function that finds the tree height. This is a recursive function
	/// that traverses the cluster_tree to to the deepest level to find the
	/// height of the cluster tree.
	///
	void FindTreeHeight(Cluster* node,
						int curr_ht,
						int *max_ht);

	///
	/// A function that returns the and evaluates the tree contour. The
	/// left and the right extent indicates what elements of the array are
	/// to be set by the current call
	///
	/// @param node, a pointer to the root node
	/// @param curr_ht, gives the current level of depth
	/// @param rad, gives the level value that we are looking for using recursion
	/// @param contour, is one dimensional array that stores the value of the evaluated contour
	/// @param L, is the left extent
	/// @param R extent Right extent
	///
	void FindTreeContour(Cluster *node,
						int curr_ht,
						double rad,
						std::vector<double> &contour,
						std::vector<double> &color,
						double L,
						double R);

};

#endif /* TREECONTOUR_H_ */
